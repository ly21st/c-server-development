// 将设置放入此文件中以覆盖默认值和用户设置。
{
    "files.defaultLanguage": "c", // ctrl+N新建文件后默认的语言
    "c-cpp-flylint.cppcheck.enable": false,
    "c-cpp-flylint.flexelint.enable": false,
    "c-cpp-flylint.run": "onType", // 此选项貌似不起作用
    "c-cpp-flylint.clang.includePaths": [
        "${workspaceRoot}",
        "E:/Program Files/LLVM/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++",
        "E:/Program Files/LLVM/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/x86_64-w64-mingw32",
        "E:/Program Files/LLVM/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/backward",
        "E:/Program Files/LLVM/lib/gcc/x86_64-w64-mingw32/8.1.0/include",
        "E:/Program Files/LLVM/includee",
        "E:/Program Files/LLVM/x86_64-w64-mingw32/include",
        "E:/Program Files/LLVM/lib/gcc/x86_64-w64-mingw32/7.1.0/include-fixed"
    ],
    "c-cpp-flylint.clang.defines": [
        "_DEBUG",
        "UNICODE",
        "__GNUC__=7",
        "__cdecl=__attribute__((__cdecl__))"
    ],
    "c-cpp-flylint.standard": [
        "c11", // 如果你想要使用c89，就自己改
        "c++1z" // c++1z即c++17
    ],
    "code-runner.runInTerminal": true, // 设置成false会在“输出”中输出，无法交互
    "code-runner.executorMap": {
        "c": "cd $dir && clang $fileName -o $fileNameWithoutExt.exe -Wall -g -Og -static-libgcc -fcolor-diagnostics --target=x86_64-w64-mingw -std=c11 && $dir$fileNameWithoutExt",
        "cpp": "cd $dir && clang++ $fileName -o $fileNameWithoutExt.exe -Wall -g -O0 -static-libgcc -fcolor-diagnostics --target=x86_64-w64-mingw -std=c++1z && $dir$fileNameWithoutExt"
    },
    "code-runner.saveFileBeforeRun": true,
    "C_Cpp.clang_format_sortIncludes": true,
    "C_Cpp.errorSquiggles": "Disabled",
    "files.associations": {
        "*.java": "java",
        "iostream": "cpp",
		"*.h": "c"
    }
}
